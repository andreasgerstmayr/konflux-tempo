#!/usr/bin/env python
import subprocess
import json
import re
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('snapshot')
args = parser.parse_args()

p = subprocess.run(["kubectl", "get", "snapshot", args.snapshot, "-o", "json"], capture_output=True, text=True, check=True)
snapshot = json.loads(p.stdout)

with open("bundle-patch/bundle.env", "r") as f:
    bundle_env = f.read()

for component in snapshot["spec"]["components"]:
    name = component["name"]
    if name.endswith("-bundle") or name.endswith("-bundle-quay"):
        continue

    pullspec = component["containerImage"]
    env_name = f"{name.upper().replace("-", "_")}_IMAGE_PULLSPEC"
    line_regexp = f"^{env_name}=.+$"

    if not re.search(line_regexp, bundle_env, flags=re.MULTILINE):
        raise Exception(f"Cannot find env var {env_name} in bundle.env")

    bundle_env = re.sub(line_regexp, f"{env_name}={pullspec}", bundle_env, flags=re.MULTILINE)

with open("bundle-patch/bundle.env", "w") as f:
    f.write(bundle_env)
